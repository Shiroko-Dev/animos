// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum AnimeStatus {
  FINISHED_AIRING
  CURRENTLY_AIRING
  UPCOMING
  UNKNOWN
}

model Anime {
  malId    Int         @id
  title    String
  synopsis String
  image    String
  score    Float
  genre    String
  rating   String
  status   AnimeStatus
}

model AnimeProvider {
  malId      Int
  provider   String
  providerId String

  @@id([malId, provider])
}

model Episode {
  id         String @id @default(uuid())
  number     Int
  animeMalId Int
  length     Int?

  @@unique([animeMalId, number, length])
}

model EpisodeProvider {
  provider          String
  episodeProviderId String // episodeId in provider
  episodeNumber     Int
  animeId           Int

  source      String? @db.VarChar(512)
  episodeId   String?
  exactLength Int?
  title       String?

  skipTimes SkipTime[]

  @@id([provider, episodeProviderId])
}

enum SkipType {
  OPENING
  ENDING
}

model SkipTime {
  provider  String
  episodeId String

  type            SkipType
  start           Int
  end             Int
  EpisodeProvider EpisodeProvider? @relation(fields: [provider, episodeId], references: [provider, episodeProviderId])

  @@id([provider, episodeId, type])
}


model AuthUser {
  id           String    @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  // here you can add custom fields for your user
  // e.g. name, email, username, roles, etc.

  @@map("auth_user")
}

model AuthSession {
  id             String	@id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}